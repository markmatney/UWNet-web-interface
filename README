Underwater Net Project Outline

I. Web interface

This is a form that takes input values from the user, sends them to the back end, runs the test suite. The input values:

  1. transmission power: max, min, step
  2. blocks/packet: max, min, step
  3. transmission mode: max, min, step
  4. test data: user-supplied file or text

1, 2, and 3 will define the range of values to test, and the script will transmit the test data under every possible set of parameters. For example, if for transmission mode the user specifies (max 5, min 1, step 2), for blocks/packet (max 8, min 1, step 7), for transmission power (max 0, min -12, step 6), our test suite would transmit the data with the following parameters:

power	blk/pkt	mode
0	1	1
-6	1	1
-12	1	1
0	8	1
-6	8	1
-12	8	1
0	1	3
-6	1	3
-12	1	3
0	8	3
-6	8	3
-12	8	3
0	1	5
-6	1	5
-12	1	5
0	8	5
-6	8	5
-12	8	5

There are 3*2*3 = 18 combinations of these parameters

II. Test script

The test script is a Python file that is adopted from the RUN_CHINFO.SH and SUB_PKT.SH shell scripts. It will receive the queued experiments (rows in the database, from the queue table) from the database when notified that the test apparatus is online, run the test script on the fields of each row, and store results in the database (in the results table). Also will email the results to the user who submitted the test parameters.

III. Database

[!] TODO: May want to store the numerical parameters in JSON

The database will store the parameters that users submit with the form, and the results of the tests. There are two tables. The queue table will store each form submission. The results table will store the output of the script; whatever results from the experiment need to be measured/analyzed (not yet specified).

	1. queue
+----+------+------+------+------+------+------+------+------+------+-----/
| id | mpwr | lpwr | ppwr | mbkn | lbkn | pbkn | mmod | lmod | pmod | ...
+----+------+------+------+------+------+------+------+------+------+-----/

	  /-----+----------+-------+
	    ... | testData | email |
	  /-----+----------+-------+

id		each row has unique

mpwr/lpwr/ppwr	max, min, step power

mbkn/lbkn/pbkn  max, min, step blocks per packet

mmod/lmod/pmod  max, min, step transmission mode

testData	file or text string provided to form as input

		[!] TODO: how to store file? Maybe just save to the server, and 
		then just store its local path in the database

email		email to send test results to



	2. results
+--------------+------------+---------+------+
| experimentId | parameters | results | done |
+--------------+------------+---------+------+

experimentId	indicates the id of the row in the queue table that this row
		is the result of.

parameters	JSON string representing the input parameters.

		{ pwr: $POWERVALUE,
		  bkn: $BLOCKSPERPACKET,
		  mod: $TRANSMISSIONMODE }

results		JSON string representing the experimental results.

		{ delay:    $DELAYTIME,
		  lossRate: $LOSS,
		  retx:     $RETX }

		bit loss rate (can be derived from block loss rate)
		retx == retransmissions

done		TRUE if results have been sent to the email specified in the 
		queue table, FALSE otherwise 


