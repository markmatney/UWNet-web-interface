Underwater Net Project Outline

I. Web interface

This is a form that takes input values from the user, to be used in an
experiment:

  1. transmission power: max, min, step
  2. blocks/packet: max, min, step
  3. transmission mode: max, min, step
  4. number of trials (repetitions)
  5. test data: uploaded file to transfer

Transmission power, blocks/packet, and transmission mode will define the range
]of values to test, and the script will transmit the test data under every
possible set of parameters, for the number of repetitions specified.

For example, if the user submits for transmission mode (max 5, min 1, step 2),
for blocks/packet (max 8, min 1, step 7), and for transmission power
(max 0, min -12, step 6), our test suite would transmit the data with the
following parameters:

power	blk/pkt	mode	trial
0	1	1	0
-6	1	1	0
-12	1	1	0
0	8	1	0
-6	8	1	0
-12	8	1	0
0	1	3	0
-6	1	3	0
-12	1	3	0
0	8	3	0
-6	8	3	0
-12	8	3	0
0	1	5	0
-6	1	5	0
-12	1	5	0
0	8	5	0
-6	8	5	0
-12	8	5	0
0	1	1	1
-6	1	1	1
-12	1	1	1
0	8	1	1
-6	8	1	1
-12	8	1	1
0	1	3	1
-6	1	3	1
-12	1	3	1
0	8	3	1
-6	8	3	1
-12	8	3	1
0	1	5	1
-6	1	5	1
-12	1	5	1
0	8	5	1
-6	8	5	1
-12	8	5	1

II. Test script

The test script is a Python file that is adopted from the RUN_CHINFO.SH and
SUB_PKT.SH shell scripts. On a schedule, it will retrieve recently enqueued
experiments (rows in InputQueue that were submitted since the last batch of
experiments was run) from the database, run the test script on the fields of
each row, and store results in the database (Results table).

During each experiment, a logfile is kept with information about the success or
failure of each packet transmission; whether or not data was mutated or lost
in transmission; number of bytes transmitted with each packet; current values
of trial number, transmission power, mode, and blocks/packet.

[!] TODO: report database query errors in logfile

III. Database

[!] TODO: May want to store the numerical parameters in JSON

The database will store the parameters that users submit with the form, and the
results of the tests. There are two tables. The InputQueue table will store
each form submission. The Results table will store the total delay time, number
of lost packets, and number of retransmissions made during each transmission of
the test data.

	1. InputQueue
+----+------+------+------+------+------+------+------+------+------+-----/
| id | mpwr | lpwr | ppwr | mbkn | lbkn | pbkn | mmod | lmod | pmod | ...
+----+------+------+------+------+------+------+------+------+------+-----/

	  /-----+------+----------+-------+------------+-----------+
	    ... | rptt | testData | email | exitStatus | emailSent |
	  /-----+------+----------+-------+------------+-----------+

id		each row has unique

mpwr/lpwr/ppwr	max, min, step power

mbkn/lbkn/pbkn  max, min, step blocks per packet

mmod/lmod/pmod  max, min, step transmission mode

rptt		number of times to repeat each experiment

testData	uploaded file (path on our server)

email		email to send test results to

exitStatus	the exit status of the test script, e.g. if it ran each experiment correctly

		[!] TODO: specify status codes

emailSent	TRUE if results have been sent to the email specified in the 
		queue table, FALSE otherwise 


	2. Results
+--------------+------------+---------+
| experimentId | parameters | results |
+--------------+------------+---------+

experimentId	indicates the id of the row in the queue table that this row
		is the result of.

parameters	JSON string representing the input parameters.

		{ "pwr": $TRANSMISSION_POWER,
		  "bkn": $BLOCKS_PER_PACKET,
		  "mod": $TRANSMISSION_MODE }

results		JSON string representing the experimental results for all trials using
		a particular parameter combination, keyed by the trial number.

		{ "0": { "delay": $DELAY_TIME,
		         "loss":  $PACKET_LOSS_COUNT,
		         "retx":  $PACKET_RETX_COUNT },
                  "1": ...
                }

		[!] TODO: calculate bit loss rate (derived from block loss rate)
		retx == retransmissions

IV. Publishing Script

In order for users to see the results of their test, we will generate plots of
the data and other summaries/analysis, and send the results to them via the
email provided when they submitted the form.

[!] TODO: in progress
